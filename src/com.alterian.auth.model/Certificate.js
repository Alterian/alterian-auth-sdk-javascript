/**
 * Authentication API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 6.35.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Certificate model module.
 * @module com.alterian.auth.model/Certificate
 * @version 6.35.0
 */
class Certificate {
    /**
     * Constructs a new <code>Certificate</code>.
     * 
     * @alias module:com.alterian.auth.model/Certificate
     */
    constructor() { 
        
        Certificate.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Certificate</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:com.alterian.auth.model/Certificate} obj Optional instance to populate.
     * @return {module:com.alterian.auth.model/Certificate} The populated <code>Certificate</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Certificate();

            if (data.hasOwnProperty('ID')) {
                obj['ID'] = ApiClient.convertToType(data['ID'], 'Number');
            }
            if (data.hasOwnProperty('Thumbprint')) {
                obj['Thumbprint'] = ApiClient.convertToType(data['Thumbprint'], 'String');
            }
            if (data.hasOwnProperty('System')) {
                obj['System'] = ApiClient.convertToType(data['System'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Certificate</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Certificate</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['Thumbprint'] && !(typeof data['Thumbprint'] === 'string' || data['Thumbprint'] instanceof String)) {
            throw new Error("Expected the field `Thumbprint` to be a primitive type in the JSON string but got " + data['Thumbprint']);
        }

        return true;
    }


}



/**
 * Id of the certificate
 * @member {Number} ID
 */
Certificate.prototype['ID'] = undefined;

/**
 * Thumbprint of the certificate, typically obtained by viewing the properties of the certificate.  The thumbprint property's hex string is placed here.             For certificates which are used as part of SAML processing, this thumbprint can be a name instead.
 * @member {String} Thumbprint
 */
Certificate.prototype['Thumbprint'] = undefined;

/**
 * Is this certificate a system certificate?  If you create a system certificate, you will be unable to delete it later.  This value would typically be set to false.
 * @member {Boolean} System
 */
Certificate.prototype['System'] = undefined;






export default Certificate;

